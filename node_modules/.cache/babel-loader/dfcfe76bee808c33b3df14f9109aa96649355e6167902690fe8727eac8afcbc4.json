{"ast":null,"code":"var _jsxFileName = \"/home/jacson/Documentos/Sistemas React/sistema-login-react/src/pages/login/index.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import Form from '../../components/Form';\n// import Input from '../../components/Input';\n// import Button from '../../components/Button';\n// import { Container, ErrorMessage } from './styles';\n\n// const LoginPage = () => {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (username === 'admin' && password === 'admin') {\n//       navigate('/home');\n//     } else {\n//       setError('Usuário ou senha incorretos!');\n//     }\n//   };\n\n//   return (\n//     <Container>\n//       <Form onSubmit={handleSubmit}>\n//         <Input\n//           type=\"text\"\n//           placeholder=\"Username\"\n//           value={username}\n//           onChange={(e) => setUsername(e.target.value)}\n//         />\n//         <Input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//         />\n//         <Button>Login</Button>\n//         {error && <ErrorMessage>{error}</ErrorMessage>}\n//       </Form>\n//     </Container>\n//   );\n// };\n\n// export default LoginPage;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Form from '../../components/Form';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { Container, ErrorMessage } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (username === 'admin' && password === 'admin') {\n      onLogin(); // Define autenticação como verdadeira\n      navigate('/home'); // Redireciona para a página inicial\n    } else {\n      setError('Usuário ou senha inválido');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"PRk3rkn/Zq+a3Ceqt4taaWXn0UQ=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","Form","Input","Button","Container","ErrorMessage","jsxDEV","_jsxDEV","LoginPage","onLogin","_s","username","setUsername","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jacson/Documentos/Sistemas React/sistema-login-react/src/pages/login/index.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import Form from '../../components/Form';\n// import Input from '../../components/Input';\n// import Button from '../../components/Button';\n// import { Container, ErrorMessage } from './styles';\n\n// const LoginPage = () => {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (username === 'admin' && password === 'admin') {\n//       navigate('/home');\n//     } else {\n//       setError('Usuário ou senha incorretos!');\n//     }\n//   };\n\n//   return (\n//     <Container>\n//       <Form onSubmit={handleSubmit}>\n//         <Input\n//           type=\"text\"\n//           placeholder=\"Username\"\n//           value={username}\n//           onChange={(e) => setUsername(e.target.value)}\n//         />\n//         <Input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//         />\n//         <Button>Login</Button>\n//         {error && <ErrorMessage>{error}</ErrorMessage>}\n//       </Form>\n//     </Container>\n//   );\n// };\n\n// export default LoginPage;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Form from '../../components/Form';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { Container, ErrorMessage } from './styles';\n\nconst LoginPage = ({ onLogin }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (username === 'admin' && password === 'admin') {\n      onLogin(); // Define autenticação como verdadeira\n      navigate('/home'); // Redireciona para a página inicial\n    } else {\n      setError('Usuário ou senha inválido');\n    }\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <Input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <Button>Login</Button>\n        {error && <ErrorMessage>{error}</ErrorMessage>}\n      </Form>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,SAAS,EAAEC,YAAY,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMkB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9B,MAAMkB,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIT,QAAQ,KAAK,OAAO,IAAIE,QAAQ,KAAK,OAAO,EAAE;MAChDJ,OAAO,CAAC,CAAC,CAAC,CAAC;MACXQ,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IACrB,CAAC,MAAM;MACLD,QAAQ,CAAC,2BAA2B,CAAC;IACvC;EACF,CAAC;EAED,oBACET,OAAA,CAACH,SAAS;IAAAiB,QAAA,eACRd,OAAA,CAACN,IAAI;MAACqB,QAAQ,EAAEJ,YAAa;MAAAG,QAAA,gBAC3Bd,OAAA,CAACL,KAAK;QACJqB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEd,QAAS;QAChBe,QAAQ,EAAGP,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACQ,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFxB,OAAA,CAACL,KAAK;QACJqB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEZ,QAAS;QAChBa,QAAQ,EAAGP,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACQ,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFxB,OAAA,CAACJ,MAAM;QAAAkB,QAAA,EAAC;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACrBhB,KAAK,iBAAIR,OAAA,CAACF,YAAY;QAAAgB,QAAA,EAAEN;MAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAACrB,EAAA,CApCIF,SAAS;EAAA,QAIIR,WAAW;AAAA;AAAAgC,EAAA,GAJxBxB,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}